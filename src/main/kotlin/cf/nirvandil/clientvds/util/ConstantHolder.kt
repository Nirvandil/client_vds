package cf.nirvandil.clientvds.util

const val LOGO_PATH = "/friendlogo.png"
const val HELP_IMAGE_PATH = "/help.png"
const val CSS_STYLE_PATH = "/style.css"
const val EXEC_SESSION = "exec"
const val SUCCESS_TITLE = "Выполнено"
const val SUCCESS_CONTENT = "Указанные домены обработаны!"
const val SUCCESS_HEADER = "Операция завершена успешно"
const val OWNER_TITLE = "Владелец"
const val ASK_USER_HEADER = "Укажите, с каким пользователем \nпанели управления будет идти работа"
const val ASK_USER_CONTENT = "Имя пользователя: "
const val ASK_USER_EMPTY_MESSAGE = "Необходимо обязательно указывать пользователя!"
const val ERROR_TITLE = "Ошибка"
const val ERROR_HEADER = "К сожалению, возникла ошибка, её подробности описаны ниже"
const val PANEL_DOES_NOT_EXIST_MESSAGE = "Панель управления не обнаружена!"
const val PANEL_DOES_NOT_EXIST_HEADER = "Работа утилиты возможна только с \nISPmanager 4/5 Lite и VestaCP"
const val DIGITAL_OCEAN_API_DOMAINS = "https://api.digitalocean.com/v2/domains"
const val JSON = "application/json"
const val NO_USERS_MESSAGE = "Похоже, что Вы не добавили ни одного пользователя в панель управления!"
const val ISP4_GET_USERS_COMMAND = "/usr/local/ispmgr/sbin/mgrctl user | cut -f 2 -d '='| cut -f 1 -d ' '"
const val GET_PANEL_COMMAND = "if [ -d /usr/local/vesta ]; then echo VESTA; elif [ -d /usr/local/ispmgr ]; " +
        "then echo ISP4; elif [ -d /usr/local/mgr5 ]; then echo ISP5; else echo UNKNOWN ; fi"
const val PATH_TEMPLATE_TOOLTIP = "Укажите путь к каталогу, содержащему файлы для загрузки в создаваемые каталоги сайтов. \nЕсли это не нужно, " + "оставьте данное поле пустым. Путь указывается от корня сервера"
const val FRIEND_URI = "https://friendhosting.net"
const val WIKI_HELP_URI = "http://wiki.friendhosting.net/index.php?title=Массовое_добавление_доменов_на_сервер_с_ISPmanager_или_VESTA"
const val HELP_TOOLTIP = "Нажмите, чтобы открыть страницу справки (в Интернете)"
const val REMOVE_BUTTON_TOOLTIP = "Удалит указанный список доменов с сервера. Если таких доменов не существует, ничего не случится"
const val IP_TOOLTIP = "Укажите здесь IP-адрес своего сервера"
const val PORT_TOOLTIP = "Укажите здесь порт SSH на сервере (обычно 3333 или 22)"
const val PASS_TOOLTIP = "Введите здесь пароль пользователя root Вашего сервера"
const val DOMAINS_LIST_TOOLTIP = "Сюда введите список доменов, по одному в строке"
const val PHP_CGI_TOOLTIP = "Использовать режим работы РНР как CGI (по умолчанию подходит всем)"
const val PHP_MODE_TOOLTIP = "Использовать режим работы РНР как модуль Apache (выбирайте, если знаете, что делаете)"
const val DO_TOKEN_TOOLTIP = "Oauth token от Digital Ocean."
const val PATH_TEMPLATE_PROMPT = "/var/www/username/template/directory"
const val MAIN_WINDOW_NAME = "Автоматическое добавление доменов на серверы с ISPmanager и VESTA"
const val PROGRESS_HINT = "Здесь будет отображён прогресс операции"
const val IP_PORT_HING = "Укажите IP-адрес и порт SSH здесь"
const val PASS_HINT = "Укажите здесь пароль root"
const val TEMPLATE_HINT = "Путь к каталогу с шаблоном"
const val FH_LINK_NAME = "Действительно качественный хостинг"
const val ADD = "Добавить"
const val REMOVE = "Удалить"
const val PHP_CGI = "PHP как CGI"
const val PHP_MODE = "PHP как модуль"
const val WARN = "Внимание"
const val IO_ERR_MESSAGE = "Произошла ошибка ввода-вывода, проверьте наличие подключения!"
const val CONNECT_ERR_MESSAGE = "Произошла ошибка при подключении, проверьте введённые данные!"
const val PORT_ERR_MESSAGE = "Некорректно указан порт для подключения!"
const val MESSAGE_EMPTY_FIELDS = "Все поля, кроме токена и пути к шаблону, должны быть заполнены!"
const val LOCALHOST = "127.0.0.1"